diff -ruN admin-upd-res/net/bluetooth/af_bluetooth.c net/bluetooth/af_bluetooth.c
--- admin-upd-res/net/bluetooth/af_bluetooth.c	2012-02-08 10:02:20.143935000 +0200
+++ net/bluetooth/af_bluetooth.c	2012-02-08 10:02:23.030704000 +0200
@@ -40,6 +40,13 @@
 
 #include <net/bluetooth/bluetooth.h>
 
+#ifdef CONFIG_ANDROID_PARANOID_NETWORK
+#include <linux/android_aid.h>
+#endif
+#ifndef CONFIG_BT_SOCK_DEBUG
+#undef  BT_DBG
+#define BT_DBG(D...)
+#endif
 #define VERSION "2.16"
 
 /* Bluetooth sockets */
@@ -125,14 +132,36 @@
 }
 EXPORT_SYMBOL(bt_sock_unregister);
 
-#if (LINUX_VERSION_CODE > KERNEL_VERSION(2,6,32))
+#ifdef CONFIG_ANDROID_PARANOID_NETWORK
+static inline int current_has_bt_admin(void)
+{
+	return (!current_euid() || in_egroup_p(AID_NET_BT_ADMIN));
+}
+
+static inline int current_has_bt(void)
+{
+	return (current_has_bt_admin() || in_egroup_p(AID_NET_BT));
+}
+# else
+static inline int current_has_bt_admin(void)
+{
+	return 1;
+}
+static inline int current_has_bt(void)
+{
+	return 1;
+}
+#endif
 static int bt_sock_create(struct net *net, struct socket *sock, int proto,
 			  int kern)
-#else
-static int bt_sock_create(struct net *net, struct socket *sock, int proto)
-#endif
 {
 	int err;
+	if (proto == BTPROTO_RFCOMM || proto == BTPROTO_SCO ||
+			proto == BTPROTO_L2CAP) {
+		if (!current_has_bt())
+			return -EPERM;
+	} else if (!current_has_bt_admin())
+		return -EPERM;
 
 	if (net != &init_net)
 		return -EAFNOSUPPORT;
diff -ruN admin-upd-res/net/bluetooth/hci_conn.c net/bluetooth/hci_conn.c
--- admin-upd-res/net/bluetooth/hci_conn.c	2012-02-08 10:02:20.156950000 +0200
+++ net/bluetooth/hci_conn.c	2012-02-08 10:02:23.033706000 +0200
@@ -333,7 +333,8 @@
 	hci_dev_unlock(hdev);
 }
 
-struct hci_conn *hci_conn_add(struct hci_dev *hdev, int type, bdaddr_t *dst)
+struct hci_conn *hci_conn_add(struct hci_dev *hdev, int type,
+					__u16 pkt_type, bdaddr_t *dst)
 {
 	struct hci_conn *conn;
 
@@ -362,14 +363,18 @@
 		conn->flowspec.service_type = HCI_FS_SERVICETYPE_BEST_EFFORT;
 		break;
 	case SCO_LINK:
-		if (lmp_esco_capable(hdev))
-			conn->pkt_type = (hdev->esco_type & SCO_ESCO_MASK) |
-					(hdev->esco_type & EDR_ESCO_MASK);
-		else
-			conn->pkt_type = hdev->pkt_type & SCO_PTYPE_MASK;
-		break;
+		if (!pkt_type)
+			pkt_type = SCO_ESCO_MASK;
 	case ESCO_LINK:
-		conn->pkt_type = hdev->esco_type & ~EDR_ESCO_MASK;
+		if (!pkt_type)
+			pkt_type = ALL_ESCO_MASK;
+		if (lmp_esco_capable(hdev)) {
+			conn->pkt_type = (pkt_type ^ EDR_ESCO_MASK) &
+					hdev->esco_type;
+		} else {
+			conn->pkt_type = (pkt_type << 5) & hdev->pkt_type &
+					SCO_PTYPE_MASK;
+		}
 		break;
 	}
 
@@ -494,7 +499,7 @@
 
 /* Create SCO, ACL or LE connection.
  * Device _must_ be locked */
-struct hci_conn *hci_connect(struct hci_dev *hdev, int type, bdaddr_t *dst, __u8 addr_type, __u8 sec_level, __u8 auth_type)
+struct hci_conn *hci_connect(struct hci_dev *hdev, int type, __u16 pkt_type, bdaddr_t *dst, __u8 addr_type, __u8 sec_level, __u8 auth_type)
 {
 	struct hci_conn *acl;
 	struct hci_conn *sco;
@@ -518,9 +523,10 @@
 		} else {
 			addr_type = (addr_type == BT_ADDR_LE_RANDOM ? ADDR_LE_DEV_RANDOM : ADDR_LE_DEV_PUBLIC);
 		}
+		
 		BT_DBG("addr_type=%d",addr_type);
 /* BlueTi End */
-		le = hci_conn_add(hdev, LE_LINK, dst);
+		le = hci_conn_add(hdev, LE_LINK, 0, dst);
 		if (!le)
 			return ERR_PTR(-ENOMEM);
 
@@ -537,7 +543,7 @@
 
 	acl = hci_conn_hash_lookup_ba(hdev, ACL_LINK, dst);
 	if (!acl) {
-		acl = hci_conn_add(hdev, ACL_LINK, dst);
+		acl = hci_conn_add(hdev, ACL_LINK, 0, dst);
 		if (!acl)
 			return NULL;
 	}
@@ -556,7 +562,7 @@
 
 	sco = hci_conn_hash_lookup_ba(hdev, type, dst);
 	if (!sco) {
-		sco = hci_conn_add(hdev, type, dst);
+		sco = hci_conn_add(hdev, type, pkt_type, dst);
 		if (!sco) {
 			hci_conn_put(acl);
 			return NULL;
@@ -900,6 +906,15 @@
 		(ci + n)->out   = c->out;
 		(ci + n)->state = c->state;
 		(ci + n)->link_mode = c->link_mode;
+		if (c->type == SCO_LINK) {
+			(ci + n)->mtu = hdev->sco_mtu;
+			(ci + n)->cnt = hdev->sco_cnt;
+			(ci + n)->pkts = hdev->sco_pkts;
+		} else {
+			(ci + n)->mtu = hdev->acl_mtu;
+			(ci + n)->cnt = hdev->acl_cnt;
+			(ci + n)->pkts = hdev->acl_pkts;
+		}
 		if (++n >= req.conn_num)
 			break;
 	}
@@ -936,6 +951,15 @@
 		ci.out   = conn->out;
 		ci.state = conn->state;
 		ci.link_mode = conn->link_mode;
+		if (req.type == SCO_LINK) {
+			ci.mtu = hdev->sco_mtu;
+			ci.cnt = hdev->sco_cnt;
+			ci.pkts = hdev->sco_pkts;
+		} else {
+			ci.mtu = hdev->acl_mtu;
+			ci.cnt = hdev->acl_cnt;
+			ci.pkts = hdev->acl_pkts;
+		}
 	}
 	hci_dev_unlock_bh(hdev);
 
diff -ruN admin-upd-res/net/bluetooth/hci_core.c net/bluetooth/hci_core.c
--- admin-upd-res/net/bluetooth/hci_core.c	2012-02-08 10:02:20.159956000 +0200
+++ net/bluetooth/hci_core.c	2012-02-08 10:02:23.037693000 +0200
@@ -2075,7 +2075,8 @@
 		spin_lock_bh(&queue->lock);
 
 		__skb_queue_tail(queue, skb);
-
+		
+		flags &= ~ACL_PB_MASK;
 		flags &= ~ACL_START;
 		flags |= ACL_CONT;
 		do {
diff -ruN admin-upd-res/net/bluetooth/hci_event.c net/bluetooth/hci_event.c
--- admin-upd-res/net/bluetooth/hci_event.c	2012-02-08 10:02:20.162949000 +0200
+++ net/bluetooth/hci_event.c	2012-02-08 10:02:23.043709000 +0200
@@ -1106,7 +1106,7 @@
 		}
 	} else {
 		if (!conn) {
-			conn = hci_conn_add(hdev, ACL_LINK, &cp->bdaddr);
+			conn = hci_conn_add(hdev, ACL_LINK, 0, &cp->bdaddr);
 			if (conn) {
 				conn->out = 1;
 				conn->link_mode |= HCI_LM_MASTER;
@@ -1430,7 +1430,7 @@
 		}
 	} else {
 		if (!conn) {
-			conn = hci_conn_add(hdev, LE_LINK, &cp->peer_addr);
+			conn = hci_conn_add(hdev, LE_LINK, 0, &cp->peer_addr);
 			if (conn) {
 				conn->dst_type = cp->peer_addr_type;
 				conn->out = 1;
@@ -1606,7 +1606,7 @@
 
 		conn = hci_conn_hash_lookup_ba(hdev, ev->link_type, &ev->bdaddr);
 		if (!conn) {
-			conn = hci_conn_add(hdev, ev->link_type, &ev->bdaddr);
+			conn = hci_conn_add(hdev, ev->link_type, 0, &ev->bdaddr);
 			if (!conn) {
 				BT_ERR("No memory for new connection");
 				hci_dev_unlock(hdev);
@@ -2637,6 +2637,7 @@
 		hci_conn_add_sysfs(conn);
 		break;
 
+	case 0x10:	/* Connection Accept Timeout */
 	case 0x11:	/* Unsupported Feature or Parameter Value */
 	case 0x1c:	/* SCO interval rejected */
 	case 0x1a:	/* Unsupported Remote Feature */
@@ -2950,7 +2951,7 @@
 
 	conn = hci_conn_hash_lookup_ba(hdev, LE_LINK, &ev->bdaddr);
 	if (!conn) {
-		conn = hci_conn_add(hdev, LE_LINK, &ev->bdaddr);
+		conn = hci_conn_add(hdev, LE_LINK, 0, &ev->bdaddr);
 		if (!conn) {
 			BT_ERR("No memory for new connection");
 			hci_dev_unlock(hdev);
diff -ruN admin-upd-res/net/bluetooth/hci_sysfs.c net/bluetooth/hci_sysfs.c
--- admin-upd-res/net/bluetooth/hci_sysfs.c	2012-02-08 10:02:20.166937000 +0200
+++ net/bluetooth/hci_sysfs.c	2012-02-08 10:02:23.045720000 +0200
@@ -289,13 +289,19 @@
 static ssize_t store_idle_timeout(struct device *dev, struct device_attribute *attr, const char *buf, size_t count)
 {
 	struct hci_dev *hdev = dev_get_drvdata(dev);
+#if 0 /* CHEN */	
 	unsigned int val;
 	int rv;
 
 	rv = kstrtouint(buf, 0, &val);
 	if (rv < 0)
 		return rv;
+#else
+	unsigned long val;
 
+	if (strict_strtoul(buf, 0, &val) < 0)
+		return -EINVAL;
+#endif
 	if (val != 0 && (val < 500 || val > 3600000))
 		return -EINVAL;
 
@@ -313,13 +319,22 @@
 static ssize_t store_sniff_max_interval(struct device *dev, struct device_attribute *attr, const char *buf, size_t count)
 {
 	struct hci_dev *hdev = dev_get_drvdata(dev);
+#if 0 /* CHEN */	
 	u16 val;
 	int rv;
 
 	rv = kstrtou16(buf, 0, &val);
 	if (rv < 0)
 		return rv;
+#else
+	unsigned long val;
 
+	if (strict_strtoul(buf, 0, &val) < 0)
+		return -EINVAL;
+
+	if (val < 0x0002 || val > 0xFFFE || val % 2)
+		return -EINVAL;
+#endif
 	if (val == 0 || val % 2 || val < hdev->sniff_min_interval)
 		return -EINVAL;
 
@@ -337,13 +352,23 @@
 static ssize_t store_sniff_min_interval(struct device *dev, struct device_attribute *attr, const char *buf, size_t count)
 {
 	struct hci_dev *hdev = dev_get_drvdata(dev);
+#if 0 /* CHEN */
 	u16 val;
 	int rv;
 
 	rv = kstrtou16(buf, 0, &val);
 	if (rv < 0)
 		return rv;
+#else
+	unsigned long val;
+
+	if (strict_strtoul(buf, 0, &val) < 0)
+		return -EINVAL;
 
+	if (val < 0x0002 || val > 0xFFFE || val % 2)
+		return -EINVAL;
+
+#endif
 	if (val == 0 || val % 2 || val > hdev->sniff_max_interval)
 		return -EINVAL;
 
diff -ruN admin-upd-res/net/bluetooth/l2cap_core.c net/bluetooth/l2cap_core.c
--- admin-upd-res/net/bluetooth/l2cap_core.c	2012-02-08 10:02:20.168963000 +0200
+++ net/bluetooth/l2cap_core.c	2012-02-08 10:02:23.050686000 +0200
@@ -1152,10 +1152,10 @@
 	auth_type = l2cap_get_auth_type(chan);
 /* BlueTi Start */
 	if (chan->dcid == L2CAP_CID_LE_DATA)
-		hcon = hci_connect(hdev, LE_LINK, dst, chan->addr_type,
+		hcon = hci_connect(hdev, LE_LINK, 0, dst, chan->addr_type,
 					chan->sec_level, auth_type);
 	else
-		hcon = hci_connect(hdev, ACL_LINK, dst,chan->addr_type,
+		hcon = hci_connect(hdev, ACL_LINK, 0, dst,chan->addr_type,
 					chan->sec_level, auth_type);
 /* BlueTi End */
 
@@ -4732,6 +4732,7 @@
 	.recv_acldata	= l2cap_recv_acldata
 };
 
+#ifdef CONFIG_COMPAT_BT_L2CAP
 int __init l2cap_init(void)
 {
 	int err;
@@ -4770,7 +4771,8 @@
 
 	l2cap_cleanup_sockets();
 }
-
+#else
+#endif
 module_param(disable_ertm, bool, 0644);
 MODULE_PARM_DESC(disable_ertm, "Disable enhanced retransmission mode");
 
diff -ruN admin-upd-res/net/bluetooth/mgmt.c net/bluetooth/mgmt.c
--- admin-upd-res/net/bluetooth/mgmt.c	2012-02-08 10:02:20.173968000 +0200
+++ net/bluetooth/mgmt.c	2012-02-08 10:03:14.359490000 +0200
@@ -1410,10 +1410,10 @@
 		auth_type = HCI_AT_DEDICATED_BONDING_MITM;
 
 	if (cp->addr.type == MGMT_ADDR_BREDR)
-		conn = hci_connect(hdev, ACL_LINK, &cp->addr.bdaddr, cp->addr.type, sec_level,
+		conn = hci_connect(hdev, ACL_LINK, 0, &cp->addr.bdaddr, cp->addr.type, sec_level,
 	 								auth_type);
 	else
-		conn = hci_connect(hdev, LE_LINK, &cp->addr.bdaddr, cp->addr.type, sec_level,
+		conn = hci_connect(hdev, LE_LINK, 0, &cp->addr.bdaddr, cp->addr.type, sec_level,
 									auth_type);
 
 	memset(&rp, 0, sizeof(rp));
diff -ruN admin-upd-res/net/bluetooth/rfcomm/core.c net/bluetooth/rfcomm/core.c
--- admin-upd-res/net/bluetooth/rfcomm/core.c	2012-02-08 10:02:20.188947000 +0200
+++ net/bluetooth/rfcomm/core.c	2012-02-08 10:02:23.063692000 +0200
@@ -250,32 +250,6 @@
 	return hci_conn_security(conn->hcon, d->sec_level, auth_type);
 }
 
-static void rfcomm_session_timeout(unsigned long arg)
-{
-	struct rfcomm_session *s = (void *) arg;
-
-	BT_DBG("session %p state %ld", s, s->state);
-
-	set_bit(RFCOMM_TIMED_OUT, &s->flags);
-	rfcomm_schedule();
-}
-
-static void rfcomm_session_set_timer(struct rfcomm_session *s, long timeout)
-{
-	BT_DBG("session %p state %ld timeout %ld", s, s->state, timeout);
-
-	if (!mod_timer(&s->timer, jiffies + timeout))
-		rfcomm_session_hold(s);
-}
-
-static void rfcomm_session_clear_timer(struct rfcomm_session *s)
-{
-	BT_DBG("session %p state %ld", s, s->state);
-
-	if (timer_pending(&s->timer) && del_timer(&s->timer))
-		rfcomm_session_put(s);
-}
-
 /* ---- RFCOMM DLCs ---- */
 static void rfcomm_dlc_timeout(unsigned long arg)
 {
@@ -353,7 +327,6 @@
 
 	rfcomm_session_hold(s);
 
-	rfcomm_session_clear_timer(s);
 	rfcomm_dlc_hold(d);
 	list_add(&d->list, &s->dlcs);
 	d->session = s;
@@ -369,8 +342,6 @@
 	d->session = NULL;
 	rfcomm_dlc_put(d);
 
-	if (list_empty(&s->dlcs))
-		rfcomm_session_set_timer(s, RFCOMM_IDLE_TIMEOUT);
 
 	rfcomm_session_put(s);
 }
@@ -463,7 +434,6 @@
 
 	switch (d->state) {
 	case BT_CONNECT:
-	case BT_CONFIG:
 		if (test_and_clear_bit(RFCOMM_DEFER_SETUP, &d->flags)) {
 			set_bit(RFCOMM_AUTH_REJECT, &d->flags);
 			rfcomm_schedule();
@@ -483,7 +453,6 @@
 		break;
 
 	case BT_OPEN:
-	case BT_CONNECT2:
 		if (test_and_clear_bit(RFCOMM_DEFER_SETUP, &d->flags)) {
 			set_bit(RFCOMM_AUTH_REJECT, &d->flags);
 			rfcomm_schedule();
@@ -602,7 +571,6 @@
 
 	BT_DBG("session %p sock %p", s, sock);
 
-	setup_timer(&s->timer, rfcomm_session_timeout, (unsigned long) s);
 
 	INIT_LIST_HEAD(&s->dlcs);
 	s->state = state;
@@ -635,7 +603,6 @@
 	if (state == BT_CONNECTED)
 		rfcomm_send_disc(s, 0);
 
-	rfcomm_session_clear_timer(s);
 	sock_release(s->sock);
 	kfree(s);
 
@@ -677,7 +644,6 @@
 		__rfcomm_dlc_close(d, err);
 	}
 
-	rfcomm_session_clear_timer(s);
 	rfcomm_session_put(s);
 }
 
@@ -1262,7 +1228,6 @@
 
 	rfcomm_send_ua(d->session, d->dlci);
 
-	rfcomm_dlc_clear_timer(d);
 
 	rfcomm_dlc_lock(d);
 	d->state = BT_CONNECTED;
@@ -1282,10 +1247,6 @@
 			set_bit(RFCOMM_DEFER_SETUP, &d->flags);
 			rfcomm_dlc_set_timer(d, RFCOMM_AUTH_TIMEOUT);
 
-			rfcomm_dlc_lock(d);
-			d->state = BT_CONNECT2;
-			d->state_change(d, 0);
-			rfcomm_dlc_unlock(d);
 		} else
 			rfcomm_dlc_accept(d);
 	} else {
@@ -1834,10 +1795,6 @@
 					set_bit(RFCOMM_DEFER_SETUP, &d->flags);
 					rfcomm_dlc_set_timer(d, RFCOMM_AUTH_TIMEOUT);
 
-					rfcomm_dlc_lock(d);
-					d->state = BT_CONNECT2;
-					d->state_change(d, 0);
-					rfcomm_dlc_unlock(d);
 				} else
 					rfcomm_dlc_accept(d);
 			}
@@ -1957,12 +1914,6 @@
 		struct rfcomm_session *s;
 		s = list_entry(p, struct rfcomm_session, list);
 
-		if (test_and_clear_bit(RFCOMM_TIMED_OUT, &s->flags)) {
-			s->state = BT_DISCONN;
-			rfcomm_send_disc(s, 0);
-			rfcomm_session_put(s);
-			continue;
-		}
 
 		if (s->state == BT_LISTEN) {
 			rfcomm_accept_connection(s);
diff -ruN admin-upd-res/net/bluetooth/sco.c net/bluetooth/sco.c
--- admin-upd-res/net/bluetooth/sco.c	2012-02-08 10:02:20.175956000 +0200
+++ net/bluetooth/sco.c	2012-02-08 10:02:23.065697000 +0200
@@ -178,6 +178,7 @@
 {
 	bdaddr_t *src = &bt_sk(sk)->src;
 	bdaddr_t *dst = &bt_sk(sk)->dst;
+	__u16 pkt_type = sco_pi(sk)->pkt_type;
 	struct sco_conn *conn;
 	struct hci_conn *hcon;
 	struct hci_dev  *hdev;
@@ -193,11 +194,13 @@
 
 	if (lmp_esco_capable(hdev) && !disable_esco)
 		type = ESCO_LINK;
-	else
+	else {
 		type = SCO_LINK;
+        pkt_type &= SCO_ESCO_MASK;
+    }        
 
 /* BlueTi Start */
-	hcon = hci_connect(hdev, type, dst, BT_ADDR_BREDR, BT_SECURITY_LOW, HCI_AT_NO_BONDING);
+	hcon = hci_connect(hdev, type, pkt_type, dst, BT_ADDR_BREDR, BT_SECURITY_LOW, HCI_AT_NO_BONDING);
 /* BlueTi End */
 
 	if (IS_ERR(hcon)) {
@@ -470,17 +473,20 @@
 	return 0;
 }
 
-static int sco_sock_bind(struct socket *sock, struct sockaddr *addr, int addr_len)
+static int sco_sock_bind(struct socket *sock, struct sockaddr *addr, int alen)
 {
-	struct sockaddr_sco *sa = (struct sockaddr_sco *) addr;
+	struct sockaddr_sco sa;
 	struct sock *sk = sock->sk;
-	bdaddr_t *src = &sa->sco_bdaddr;
-	int err = 0;
+	bdaddr_t *src = &sa.sco_bdaddr;
+	int len, err = 0;
 
-	BT_DBG("sk %p %s", sk, batostr(&sa->sco_bdaddr));
+	BT_DBG("sk %p %s", sk, batostr(&sa.sco_bdaddr));
 
 	if (!addr || addr->sa_family != AF_BLUETOOTH)
 		return -EINVAL;
+	memset(&sa, 0, sizeof(sa));
+	len = min_t(unsigned int, sizeof(sa), alen);
+	memcpy(&sa, addr, len);
 
 	lock_sock(sk);
 
@@ -495,7 +501,8 @@
 		err = -EADDRINUSE;
 	} else {
 		/* Save source address */
-		bacpy(&bt_sk(sk)->src, &sa->sco_bdaddr);
+		bacpy(&bt_sk(sk)->src, &sa.sco_bdaddr);
+		sco_pi(sk)->pkt_type = sa.sco_pkt_type;
 		sk->sk_state = BT_BOUND;
 	}
 
@@ -508,30 +515,35 @@
 
 static int sco_sock_connect(struct socket *sock, struct sockaddr *addr, int alen, int flags)
 {
-	struct sockaddr_sco *sa = (struct sockaddr_sco *) addr;
 	struct sock *sk = sock->sk;
-	int err = 0;
+	struct sockaddr_sco sa;
+	int len, err = 0;
 
 
 	BT_DBG("sk %p", sk);
 
-	if (alen < sizeof(struct sockaddr_sco) ||
-	    addr->sa_family != AF_BLUETOOTH)
+	if (!addr || addr->sa_family != AF_BLUETOOTH)
 		return -EINVAL;
 
-	if (sk->sk_state != BT_OPEN && sk->sk_state != BT_BOUND)
-		return -EBADFD;
-
-	if (sk->sk_type != SOCK_SEQPACKET)
-		return -EINVAL;
+	memset(&sa, 0, sizeof(sa));
+	len = min_t(unsigned int, sizeof(sa), alen);
+	memcpy(&sa, addr, len);
 
 	lock_sock(sk);
 
+	if (sk->sk_type != SOCK_SEQPACKET) {
+		err = -EINVAL;
+		goto done;
+	}
+	if (sk->sk_state != BT_OPEN && sk->sk_state != BT_BOUND) {
+		err = -EBADFD;
+		goto done;
+	}
 	/* Set destination address and psm */
-	bacpy(&bt_sk(sk)->dst, &sa->sco_bdaddr);
+	bacpy(&bt_sk(sk)->dst, &sa.sco_bdaddr);
+	sco_pi(sk)->pkt_type = sa.sco_pkt_type;
 
-	err = sco_connect(sk);
-	if (err)
+	if ((err = sco_connect(sk)))
 		goto done;
 
 	err = bt_sock_wait_state(sk, BT_CONNECTED,
@@ -635,6 +647,7 @@
 		bacpy(&sa->sco_bdaddr, &bt_sk(sk)->dst);
 	else
 		bacpy(&sa->sco_bdaddr, &bt_sk(sk)->src);
+	sa->sco_pkt_type = sco_pi(sk)->pkt_type;
 
 	return 0;
 }
@@ -1047,7 +1060,7 @@
 	.disconn_cfm	= sco_disconn_cfm,
 	.recv_scodata	= sco_recv_scodata
 };
-
+#ifdef CONFIG_COMPAT_BT_SCO
 int __init sco_init(void)
 {
 	int err;
@@ -1097,6 +1110,7 @@
 
 	proto_unregister(&sco_proto);
 }
-
+#else
+#endif
 module_param(disable_esco, bool, 0644);
 MODULE_PARM_DESC(disable_esco, "Disable eSCO connection creation");
diff -ruN admin-upd-res/include/linux/compat_autoconf.h include/linux/compat_autoconf.h
--- admin-upd-res/include/linux/compat_autoconf.h	2012-02-08 10:02:22.957686000 +0200
+++ include/linux/compat_autoconf.h	2012-02-08 10:06:13.903516000 +0200
@@ -1,37 +1,703 @@
 #ifndef COMPAT_AUTOCONF_INCLUDED
 #define COMPAT_AUTOCONF_INCLUDED
-
 /*
- * This is an example of a compat autconf header file that gets
- * automatically generated by your projet. You will only need this
- * if you are working with a lot of config options.
- *
- * Your project will likely just override this, or leave this as-is.
+ * Automatically generated C config: don't edit
+ * Wed Feb  8 10:06:11 IST 2012 
+ * compat-wireless-2.6: 
+ * linux-2.6: 
  */
-
-/*
- * Example automatically generated C config: don't edit
- * Thu Dec 10 10:34:11 PST 2009 
- * compat-wireless-2.6: master-2009-11-19-5-gb4fd4dd
- * linux-2.6: next-20091208
- */
-//#define COMPAT_PROJECT_FOO_RELEASE "master-2009-11-19-5-gb4fd4dd"
-//#define COMPAT_UPSTREAM_FOO_KERNEL_RELEASE "next-20091208"
-
-/* Example kernel version minimum requirement */
-//#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,10))
-//#error Compat-wireless requirement: Linux >= 2,6,10
-//#endif /* (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,10) */ 
-
-/* Example hard requirement */
-//#error Compat-wireless requirement: CONFIG_WIRELESS_EXT must be enabled in your kernel
-//#endif /* CONFIG_WIRELESS_EXT */
-
-/*
- * Example of how to match your external modules kconfig options into this.
- * You'll need something to generate this for you.
- */
-//#ifndef CONFIG_FOO_BAR
-//#define CONFIG_FOO_BAR 1
-
+#define COMPAT_RELEASE ""
+#define COMPAT_KERNEL_RELEASE ""
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,24))
+#error Compat-wireless requirement: Linux >= 2,6,24
+#endif /* (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,24) */ 
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,24))
+#endif /* CONFIG_COMPAT_KERNEL_2_6_24 */
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,27))
+#endif /* CONFIG_COMPAT_KERNEL_2_6_27 */
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,33))
+#if defined(CONFIG_FW_LOADER) || defined(CONFIG_FW_LOADER_MODULE)
+#endif /* CONFIG_FW_LOADER */
+#endif /* CONFIG_COMPAT_KERNEL_2_6_33 */
+#ifndef CONFIG_MAC80211
+#define CONFIG_MAC80211 1
+#endif /* CONFIG_MAC80211 */ 
+#ifndef CONFIG_MAC80211_RC_DEFAULT
+#define CONFIG_MAC80211_RC_DEFAULT "minstrel_ht"
+#endif /* CONFIG_MAC80211_RC_DEFAULT */ 
+#ifndef CONFIG_MAC80211_RC_DEFAULT_MINSTREL
+#define CONFIG_MAC80211_RC_DEFAULT_MINSTREL 1
+#endif /* CONFIG_MAC80211_RC_DEFAULT_MINSTREL */ 
+#ifndef CONFIG_COMPAT_MAC80211_RC_DEFAULT
+#define CONFIG_COMPAT_MAC80211_RC_DEFAULT "minstrel_ht"
+#endif /* CONFIG_COMPAT_MAC80211_RC_DEFAULT */ 
+#ifndef CONFIG_MAC80211_RC_PID
+#define CONFIG_MAC80211_RC_PID 1
+#endif /* CONFIG_MAC80211_RC_PID */ 
+#ifndef CONFIG_MAC80211_RC_MINSTREL
+#define CONFIG_MAC80211_RC_MINSTREL 1
+#endif /* CONFIG_MAC80211_RC_MINSTREL */ 
+#ifndef CONFIG_MAC80211_RC_MINSTREL_HT
+#define CONFIG_MAC80211_RC_MINSTREL_HT 1
+#endif /* CONFIG_MAC80211_RC_MINSTREL_HT */ 
+#if defined(CONFIG_LEDS_TRIGGERS) || defined(CONFIG_LEDS_TRIGGERS_MODULE)
+#ifndef CONFIG_MAC80211_LEDS
+#define CONFIG_MAC80211_LEDS 1
+#endif /* CONFIG_MAC80211_LEDS */ 
+#endif /* CONFIG_LEDS_TRIGGERS */
+#ifndef CONFIG_MAC80211_MESH
+#define CONFIG_MAC80211_MESH 1
+#endif /* CONFIG_MAC80211_MESH */ 
+#ifndef CONFIG_CFG80211
+#define CONFIG_CFG80211 1
+#endif /* CONFIG_CFG80211 */ 
+#ifndef CONFIG_CFG80211_DEFAULT_PS
+#define CONFIG_CFG80211_DEFAULT_PS 1
+#endif /* CONFIG_CFG80211_DEFAULT_PS */ 
+#ifndef CONFIG_LIB80211
+#define CONFIG_LIB80211 1
+#endif /* CONFIG_LIB80211 */ 
+#ifndef CONFIG_LIB80211_CRYPT_WEP
+#define CONFIG_LIB80211_CRYPT_WEP 1
+#endif /* CONFIG_LIB80211_CRYPT_WEP */ 
+#ifndef CONFIG_LIB80211_CRYPT_CCMP
+#define CONFIG_LIB80211_CRYPT_CCMP 1
+#endif /* CONFIG_LIB80211_CRYPT_CCMP */ 
+#ifndef CONFIG_LIB80211_CRYPT_TKIP
+#define CONFIG_LIB80211_CRYPT_TKIP 1
+#endif /* CONFIG_LIB80211_CRYPT_TKIP */ 
+#ifndef CONFIG_BT
+#define CONFIG_BT 1
+#endif /* CONFIG_BT */ 
+#ifndef CONFIG_COMPAT_BT_L2CAP
+#define CONFIG_COMPAT_BT_L2CAP 1
+#endif /* CONFIG_COMPAT_BT_L2CAP */ 
+#ifndef CONFIG_COMPAT_BT_SCO
+#define CONFIG_COMPAT_BT_SCO 1
+#endif /* CONFIG_COMPAT_BT_SCO */ 
+#ifndef CONFIG_BT_RFCOMM
+#define CONFIG_BT_RFCOMM 1
+#endif /* CONFIG_BT_RFCOMM */ 
+#ifndef CONFIG_BT_RFCOMM_TTY
+#define CONFIG_BT_RFCOMM_TTY 1
+#endif /* CONFIG_BT_RFCOMM_TTY */ 
+#ifndef CONFIG_BT_BNEP
+#define CONFIG_BT_BNEP 1
+#endif /* CONFIG_BT_BNEP */ 
+#ifndef CONFIG_BT_BNEP_MC_FILTER
+#define CONFIG_BT_BNEP_MC_FILTER 1
+#endif /* CONFIG_BT_BNEP_MC_FILTER */ 
+#ifndef CONFIG_BT_BNEP_PROTO_FILTER
+#define CONFIG_BT_BNEP_PROTO_FILTER 1
+#endif /* CONFIG_BT_BNEP_PROTO_FILTER */ 
+#if defined(CONFIG_ISDN_CAPI) || defined(CONFIG_ISDN_CAPI_MODULE)
+#ifndef CONFIG_BT_CMTP
+#define CONFIG_BT_CMTP 1
+#endif /* CONFIG_BT_CMTP */ 
+#endif /* CONFIG_ISDN_CAPI */
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,28))
+#ifndef CONFIG_COMPAT_BT_HIDP
+#define CONFIG_COMPAT_BT_HIDP 1
+#endif /* CONFIG_COMPAT_BT_HIDP */ 
+#endif /* CONFIG_COMPAT_KERNEL_2_6_28 */
+#ifndef CONFIG_BT_HCIUART
+#define CONFIG_BT_HCIUART "M"
+#endif /* CONFIG_BT_HCIUART */ 
+#ifndef CONFIG_BT_HCIUART_H4
+#define CONFIG_BT_HCIUART_H4 1
+#endif /* CONFIG_BT_HCIUART_H4 */ 
+#ifndef CONFIG_BT_HCIUART_BCSP
+#define CONFIG_BT_HCIUART_BCSP 1
+#endif /* CONFIG_BT_HCIUART_BCSP */ 
+#ifndef CONFIG_BT_HCIUART_ATH3K
+#define CONFIG_BT_HCIUART_ATH3K 1
+#endif /* CONFIG_BT_HCIUART_ATH3K */ 
+#ifndef CONFIG_BT_HCIUART_LL
+#define CONFIG_BT_HCIUART_LL 1
+#endif /* CONFIG_BT_HCIUART_LL */ 
+#ifndef CONFIG_BT_HCIVHCI
+#define CONFIG_BT_HCIVHCI 1
+#endif /* CONFIG_BT_HCIVHCI */ 
+#ifndef CONFIG_BT_MRVL
+#define CONFIG_BT_MRVL 1
+#endif /* CONFIG_BT_MRVL */ 
+#if defined(CONFIG_PCMCIA) || defined(CONFIG_PCMCIA_MODULE)
+#ifndef CONFIG_BT_HCIDTL1
+#define CONFIG_BT_HCIDTL1 1
+#endif /* CONFIG_BT_HCIDTL1 */ 
+#ifndef CONFIG_BT_HCIBT3C
+#define CONFIG_BT_HCIBT3C 1
+#endif /* CONFIG_BT_HCIBT3C */ 
+#ifndef CONFIG_BT_HCIBLUECARD
+#define CONFIG_BT_HCIBLUECARD 1
+#endif /* CONFIG_BT_HCIBLUECARD */ 
+#ifndef CONFIG_BT_HCIBTUART
+#define CONFIG_BT_HCIBTUART 1
+#endif /* CONFIG_BT_HCIBTUART */ 
+#endif /* CONFIG_PCMCIA */
+#if defined(CONFIG_WIRELESS_EXT) || defined(CONFIG_WIRELESS_EXT_MODULE)
+#ifndef CONFIG_CFG80211_WEXT
+#define CONFIG_CFG80211_WEXT 1
+#endif /* CONFIG_CFG80211_WEXT */ 
+#else /* CONFIG_CFG80211_WEXT */
+#endif /* CONFIG_WIRELESS_EXT */
+#if defined(CONFIG_STAGING) || defined(CONFIG_STAGING_MODULE)
+#ifndef CONFIG_COMPAT_STAGING
+#define CONFIG_COMPAT_STAGING 1
+#endif /* CONFIG_COMPAT_STAGING */ 
+#endif /* CONFIG_STAGING */
+#ifndef CONFIG_MAC80211_HWSIM
+#define CONFIG_MAC80211_HWSIM 1
+#endif /* CONFIG_MAC80211_HWSIM */ 
+#ifndef CONFIG_ATH5K
+#define CONFIG_ATH5K 1
+#endif /* CONFIG_ATH5K */ 
+#ifndef CONFIG_ATH9K
+#define CONFIG_ATH9K 1
+#endif /* CONFIG_ATH9K */ 
+#ifndef CONFIG_ATH9K_HW
+#define CONFIG_ATH9K_HW 1
+#endif /* CONFIG_ATH9K_HW */ 
+#ifndef CONFIG_ATH9K_COMMON
+#define CONFIG_ATH9K_COMMON 1
+#endif /* CONFIG_ATH9K_COMMON */ 
+#ifndef CONFIG_ATH9K_RATE_CONTROL
+#define CONFIG_ATH9K_RATE_CONTROL 1
+#endif /* CONFIG_ATH9K_RATE_CONTROL */ 
+#if defined(CONFIG_PCI) || defined(CONFIG_PCI_MODULE)
+#ifndef CONFIG_ATH5K_PCI
+#define CONFIG_ATH5K_PCI 1
+#endif /* CONFIG_ATH5K_PCI */ 
+#ifndef CONFIG_ATH9K_PCI
+#define CONFIG_ATH9K_PCI 1
+#endif /* CONFIG_ATH9K_PCI */ 
+#ifndef CONFIG_IWLAGN
+#define CONFIG_IWLAGN 1
+#endif /* CONFIG_IWLAGN */ 
+#ifndef CONFIG_IWLWIFI_LEGACY
+#define CONFIG_IWLWIFI_LEGACY 1
+#endif /* CONFIG_IWLWIFI_LEGACY */ 
+#ifndef CONFIG_COMPAT_IWL4965
+#define CONFIG_COMPAT_IWL4965 1
+#endif /* CONFIG_COMPAT_IWL4965 */ 
+#ifndef CONFIG_IWL3945
+#define CONFIG_IWL3945 1
+#endif /* CONFIG_IWL3945 */ 
+#ifndef CONFIG_B43
+#define CONFIG_B43 1
+#endif /* CONFIG_B43 */ 
+#ifndef CONFIG_B43_HWRNG
+#define CONFIG_B43_HWRNG 1
+#endif /* CONFIG_B43_HWRNG */ 
+#ifndef CONFIG_B43_PCI_AUTOSELECT
+#define CONFIG_B43_PCI_AUTOSELECT 1
+#endif /* CONFIG_B43_PCI_AUTOSELECT */ 
+#if defined(CONFIG_PCMCIA) || defined(CONFIG_PCMCIA_MODULE)
+#ifndef CONFIG_B43_PCMCIA
+#define CONFIG_B43_PCMCIA 1
+#endif /* CONFIG_B43_PCMCIA */ 
+#endif /* CONFIG_PCMCIA */
+#if defined(CONFIG_MAC80211_LEDS) || defined(CONFIG_MAC80211_LEDS_MODULE)
+#ifndef CONFIG_B43_LEDS
+#define CONFIG_B43_LEDS 1
+#endif /* CONFIG_B43_LEDS */ 
+#endif /* CONFIG_MAC80211_LEDS */
+#ifndef CONFIG_B43_PHY_LP
+#define CONFIG_B43_PHY_LP 1
+#endif /* CONFIG_B43_PHY_LP */ 
+#ifndef CONFIG_B43_PHY_N
+#define CONFIG_B43_PHY_N 1
+#endif /* CONFIG_B43_PHY_N */ 
+#ifndef CONFIG_B43_PHY_HT
+#define CONFIG_B43_PHY_HT 1
+#endif /* CONFIG_B43_PHY_HT */ 
+#ifndef CONFIG_B43LEGACY
+#define CONFIG_B43LEGACY 1
+#endif /* CONFIG_B43LEGACY */ 
+#ifndef CONFIG_B43LEGACY_HWRNG
+#define CONFIG_B43LEGACY_HWRNG 1
+#endif /* CONFIG_B43LEGACY_HWRNG */ 
+#ifndef CONFIG_B43LEGACY_PCI_AUTOSELECT
+#define CONFIG_B43LEGACY_PCI_AUTOSELECT 1
+#endif /* CONFIG_B43LEGACY_PCI_AUTOSELECT */ 
+#if defined(CONFIG_MAC80211_LEDS) || defined(CONFIG_MAC80211_LEDS_MODULE)
+#ifndef CONFIG_B43LEGACY_LEDS
+#define CONFIG_B43LEGACY_LEDS 1
+#endif /* CONFIG_B43LEGACY_LEDS */ 
+#endif /* CONFIG_MAC80211_LEDS */
+#ifndef CONFIG_B43LEGACY_DMA
+#define CONFIG_B43LEGACY_DMA 1
+#endif /* CONFIG_B43LEGACY_DMA */ 
+#ifndef CONFIG_B43LEGACY_PIO
+#define CONFIG_B43LEGACY_PIO 1
+#endif /* CONFIG_B43LEGACY_PIO */ 
+#if defined(CONFIG_WIRELESS_EXT) || defined(CONFIG_WIRELESS_EXT_MODULE)
+#ifndef CONFIG_LIBIPW
+#define CONFIG_LIBIPW 1
+#endif /* CONFIG_LIBIPW */ 
+#ifndef CONFIG_IPW2100
+#define CONFIG_IPW2100 1
+#endif /* CONFIG_IPW2100 */ 
+#ifndef CONFIG_IPW2100_MONITOR
+#define CONFIG_IPW2100_MONITOR 1
+#endif /* CONFIG_IPW2100_MONITOR */ 
+#ifndef CONFIG_IPW2200
+#define CONFIG_IPW2200 1
+#endif /* CONFIG_IPW2200 */ 
+#ifndef CONFIG_IPW2200_MONITOR
+#define CONFIG_IPW2200_MONITOR 1
+#endif /* CONFIG_IPW2200_MONITOR */ 
+#ifndef CONFIG_IPW2200_RADIOTAP
+#define CONFIG_IPW2200_RADIOTAP 1
+#endif /* CONFIG_IPW2200_RADIOTAP */ 
+#ifndef CONFIG_IPW2200_PROMISCUOUS
+#define CONFIG_IPW2200_PROMISCUOUS 1
+#endif /* CONFIG_IPW2200_PROMISCUOUS */ 
+#ifndef CONFIG_IPW2200_QOS
+#define CONFIG_IPW2200_QOS 1
+#endif /* CONFIG_IPW2200_QOS */ 
+#endif /* CONFIG_WIRELESS_EXT */
+#if defined(CONFIG_SSB) || defined(CONFIG_SSB_MODULE)
+#ifndef CONFIG_SSB_SPROM
+#define CONFIG_SSB_SPROM 1
+#endif /* CONFIG_SSB_SPROM */ 
+#ifndef CONFIG_SSB_BLOCKIO
+#define CONFIG_SSB_BLOCKIO 1
+#endif /* CONFIG_SSB_BLOCKIO */ 
+#ifndef CONFIG_SSB_PCIHOST
+#define CONFIG_SSB_PCIHOST 1
+#endif /* CONFIG_SSB_PCIHOST */ 
+#ifndef CONFIG_SSB_B43_PCI_BRIDGE
+#define CONFIG_SSB_B43_PCI_BRIDGE 1
+#endif /* CONFIG_SSB_B43_PCI_BRIDGE */ 
+#if defined(CONFIG_PCMCIA) || defined(CONFIG_PCMCIA_MODULE)
+#ifndef CONFIG_SSB_PCMCIAHOST
+#define CONFIG_SSB_PCMCIAHOST 1
+#endif /* CONFIG_SSB_PCMCIAHOST */ 
+#endif /* CONFIG_PCMCIA */
+#ifndef CONFIG_SSB_DRIVER_PCICORE
+#define CONFIG_SSB_DRIVER_PCICORE 1
+#endif /* CONFIG_SSB_DRIVER_PCICORE */ 
+#ifndef CONFIG_B43_SSB
+#define CONFIG_B43_SSB 1
+#endif /* CONFIG_B43_SSB */ 
+#endif /* CONFIG_SSB */
+#ifndef CONFIG_BCMA
+#define CONFIG_BCMA 1
+#endif /* CONFIG_BCMA */ 
+#ifndef CONFIG_BCMA_BLOCKIO
+#define CONFIG_BCMA_BLOCKIO 1
+#endif /* CONFIG_BCMA_BLOCKIO */ 
+#ifndef CONFIG_BCMA_HOST_PCI
+#define CONFIG_BCMA_HOST_PCI 1
+#endif /* CONFIG_BCMA_HOST_PCI */ 
+#ifndef CONFIG_B43_BCMA
+#define CONFIG_B43_BCMA 1
+#endif /* CONFIG_B43_BCMA */ 
+#ifndef CONFIG_B43_BCMA_PIO
+#define CONFIG_B43_BCMA_PIO 1
+#endif /* CONFIG_B43_BCMA_PIO */ 
+#ifndef CONFIG_P54_PCI
+#define CONFIG_P54_PCI 1
+#endif /* CONFIG_P54_PCI */ 
+#ifndef CONFIG_B44
+#define CONFIG_B44 1
+#endif /* CONFIG_B44 */ 
+#ifndef CONFIG_B44_PCI
+#define CONFIG_B44_PCI 1
+#endif /* CONFIG_B44_PCI */ 
+#ifndef CONFIG_RTL8180
+#define CONFIG_RTL8180 1
+#endif /* CONFIG_RTL8180 */ 
+#ifndef CONFIG_ADM8211
+#define CONFIG_ADM8211 1
+#endif /* CONFIG_ADM8211 */ 
+#ifndef CONFIG_RT2X00_LIB_PCI
+#define CONFIG_RT2X00_LIB_PCI 1
+#endif /* CONFIG_RT2X00_LIB_PCI */ 
+#ifndef CONFIG_RT2400PCI
+#define CONFIG_RT2400PCI 1
+#endif /* CONFIG_RT2400PCI */ 
+#ifndef CONFIG_RT2500PCI
+#define CONFIG_RT2500PCI 1
+#endif /* CONFIG_RT2500PCI */ 
+#if defined(CONFIG_CRC_CCITT) || defined(CONFIG_CRC_CCITT_MODULE)
+#ifndef CONFIG_RT2800PCI
+#define CONFIG_RT2800PCI 1
+#endif /* CONFIG_RT2800PCI */ 
+#ifndef CONFIG_RT2800PCI_RT33XX
+#define CONFIG_RT2800PCI_RT33XX 1
+#endif /* CONFIG_RT2800PCI_RT33XX */ 
+#ifndef CONFIG_RT2800PCI_RT35XX
+#define CONFIG_RT2800PCI_RT35XX 1
+#endif /* CONFIG_RT2800PCI_RT35XX */ 
+#endif /* CONFIG_CRC_CCITT */
+#if defined(CONFIG_CRC_ITU_T) || defined(CONFIG_CRC_ITU_T_MODULE)
+#ifndef CONFIG_RT61PCI
+#define CONFIG_RT61PCI 1
+#endif /* CONFIG_RT61PCI */ 
+#endif /* CONFIG_CRC_ITU_T */
+#ifndef CONFIG_MWL8K
+#define CONFIG_MWL8K 1
+#endif /* CONFIG_MWL8K */ 
+#ifndef CONFIG_ATL1
+#define CONFIG_ATL1 1
+#endif /* CONFIG_ATL1 */ 
+#ifndef CONFIG_ATL2
+#define CONFIG_ATL2 1
+#endif /* CONFIG_ATL2 */ 
+#ifndef CONFIG_ATL1E
+#define CONFIG_ATL1E 1
+#endif /* CONFIG_ATL1E */ 
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,27))
+#undef CONFIG_ATL1C
+#else /* CONFIG_COMPAT_KERNEL_2_6_27 */
+#ifndef CONFIG_ATL1C
+#define CONFIG_ATL1C 1
+#endif /* CONFIG_ATL1C */ 
+#endif /* CONFIG_COMPAT_KERNEL_2_6_27 */
+#if defined(CONFIG_WIRELESS_EXT) || defined(CONFIG_WIRELESS_EXT_MODULE)
+#ifndef CONFIG_HERMES
+#define CONFIG_HERMES 1
+#endif /* CONFIG_HERMES */ 
+#ifndef CONFIG_HERMES_CACHE_FW_ON_INIT
+#define CONFIG_HERMES_CACHE_FW_ON_INIT 1
+#endif /* CONFIG_HERMES_CACHE_FW_ON_INIT */ 
+#if defined(CONFIG_PPC_PMAC) || defined(CONFIG_PPC_PMAC_MODULE)
+#ifndef CONFIG_APPLE_AIRPORT
+#define CONFIG_APPLE_AIRPORT 1
+#endif /* CONFIG_APPLE_AIRPORT */ 
+#endif /* CONFIG_PPC_PMAC */
+#ifndef CONFIG_PLX_HERMES
+#define CONFIG_PLX_HERMES 1
+#endif /* CONFIG_PLX_HERMES */ 
+#ifndef CONFIG_TMD_HERMES
+#define CONFIG_TMD_HERMES 1
+#endif /* CONFIG_TMD_HERMES */ 
+#ifndef CONFIG_NORTEL_HERMES
+#define CONFIG_NORTEL_HERMES 1
+#endif /* CONFIG_NORTEL_HERMES */ 
+#ifndef CONFIG_PCI_HERMES
+#define CONFIG_PCI_HERMES 1
+#endif /* CONFIG_PCI_HERMES */ 
+#if defined(CONFIG_PCMCIA) || defined(CONFIG_PCMCIA_MODULE)
+#ifndef CONFIG_PCMCIA_HERMES
+#define CONFIG_PCMCIA_HERMES 1
+#endif /* CONFIG_PCMCIA_HERMES */ 
+#ifndef CONFIG_PCMCIA_SPECTRUM
+#define CONFIG_PCMCIA_SPECTRUM 1
+#endif /* CONFIG_PCMCIA_SPECTRUM */ 
+#endif /* CONFIG_PCMCIA */
+#endif /* CONFIG_WIRELESS_EXT */
+#ifndef CONFIG_RTL8192CE
+#define CONFIG_RTL8192CE 1
+#endif /* CONFIG_RTL8192CE */ 
+#ifndef CONFIG_RTL8192SE
+#define CONFIG_RTL8192SE 1
+#endif /* CONFIG_RTL8192SE */ 
+#ifndef CONFIG_RTL8192DE
+#define CONFIG_RTL8192DE 1
+#endif /* CONFIG_RTL8192DE */ 
+#ifndef CONFIG_BRCMSMAC
+#define CONFIG_BRCMSMAC 1
+#endif /* CONFIG_BRCMSMAC */ 
+#endif /* CONFIG_PCI */
+#if defined(CONFIG_PCMCIA) || defined(CONFIG_PCMCIA_MODULE)
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,27))
+#undef CONFIG_LIBERTAS
+#undef CONFIG_LIBERTAS_CS
+#else /* CONFIG_COMPAT_KERNEL_2_6_27 */
+#ifndef CONFIG_LIBERTAS_CS
+#define CONFIG_LIBERTAS_CS 1
+#endif /* CONFIG_LIBERTAS_CS */ 
+#endif /* CONFIG_COMPAT_KERNEL_2_6_27 */
+#endif /* CONFIG_PCMCIA */
+#ifndef CONFIG_EEPROM_93CX6
+#define CONFIG_EEPROM_93CX6 1
+#endif /* CONFIG_EEPROM_93CX6 */ 
+#if defined(CONFIG_USB) || defined(CONFIG_USB_MODULE)
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,29))
+#ifndef CONFIG_COMPAT_ZD1211RW
+#define CONFIG_COMPAT_ZD1211RW 1
+#endif /* CONFIG_COMPAT_ZD1211RW */ 
+#endif /* CONFIG_COMPAT_KERNEL_2_6_29 */
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29))
+#undef CONFIG_USB_COMPAT_USBNET
+#undef CONFIG_USB_NET_COMPAT_RNDIS_HOST
+#undef CONFIG_USB_NET_COMPAT_RNDIS_WLAN
+#undef CONFIG_USB_NET_COMPAT_CDCETHER
+#else /* CONFIG_COMPAT_KERNEL_2_6_29 */
+#ifndef CONFIG_USB_COMPAT_USBNET
+#define CONFIG_USB_COMPAT_USBNET 1
+#endif /* CONFIG_USB_COMPAT_USBNET */ 
+#if defined(CONFIG_USB_NET_CDCETHER) || defined(CONFIG_USB_NET_CDCETHER_MODULE)
+#ifndef CONFIG_USB_NET_COMPAT_RNDIS_HOST
+#define CONFIG_USB_NET_COMPAT_RNDIS_HOST 1
+#endif /* CONFIG_USB_NET_COMPAT_RNDIS_HOST */ 
+#ifndef CONFIG_USB_NET_COMPAT_RNDIS_WLAN
+#define CONFIG_USB_NET_COMPAT_RNDIS_WLAN 1
+#endif /* CONFIG_USB_NET_COMPAT_RNDIS_WLAN */ 
+#endif /* CONFIG_USB_NET_CDCETHER */
+#if defined(CONFIG_USB_NET_CDCETHER_MODULE) || defined(CONFIG_USB_NET_CDCETHER_MODULE_MODULE)
+#ifndef CONFIG_USB_NET_COMPAT_RNDIS_HOST
+#define CONFIG_USB_NET_COMPAT_RNDIS_HOST 1
+#endif /* CONFIG_USB_NET_COMPAT_RNDIS_HOST */ 
+#ifndef CONFIG_USB_NET_COMPAT_RNDIS_WLAN
+#define CONFIG_USB_NET_COMPAT_RNDIS_WLAN 1
+#endif /* CONFIG_USB_NET_COMPAT_RNDIS_WLAN */ 
+#endif /* CONFIG_USB_NET_CDCETHER */
+#ifndef CONFIG_USB_NET_COMPAT_CDCETHER
+#define CONFIG_USB_NET_COMPAT_CDCETHER 1
+#endif /* CONFIG_USB_NET_COMPAT_CDCETHER */ 
+#endif /* CONFIG_COMPAT_KERNEL_2_6_29 */
+#ifndef CONFIG_P54_USB
+#define CONFIG_P54_USB 1
+#endif /* CONFIG_P54_USB */ 
+#ifndef CONFIG_RTL8187
+#define CONFIG_RTL8187 1
+#endif /* CONFIG_RTL8187 */ 
+#if defined(CONFIG_MAC80211_LEDS) || defined(CONFIG_MAC80211_LEDS_MODULE)
+#ifndef CONFIG_RTL8187_LEDS
+#define CONFIG_RTL8187_LEDS 1
+#endif /* CONFIG_RTL8187_LEDS */ 
+#endif /* CONFIG_MAC80211_LEDS */
+#ifndef CONFIG_AT76C50X_USB
+#define CONFIG_AT76C50X_USB 1
+#endif /* CONFIG_AT76C50X_USB */ 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,29))
+#ifndef CONFIG_CARL9170
+#define CONFIG_CARL9170 1
+#endif /* CONFIG_CARL9170 */ 
+#if defined(CONFIG_MAC80211_LEDS) || defined(CONFIG_MAC80211_LEDS_MODULE)
+#ifndef CONFIG_CARL9170_LEDS
+#define CONFIG_CARL9170_LEDS 1
+#endif /* CONFIG_CARL9170_LEDS */ 
+#endif /* CONFIG_MAC80211_LEDS */
+#ifndef CONFIG_CARL9170_WPC
+#define CONFIG_CARL9170_WPC 1
+#endif /* CONFIG_CARL9170_WPC */ 
+#endif /* CONFIG_COMPAT_KERNEL_2_6_29 */
+#ifndef CONFIG_COMPAT_USB_URB_THREAD_FIX
+#define CONFIG_COMPAT_USB_URB_THREAD_FIX 1
+#endif /* CONFIG_COMPAT_USB_URB_THREAD_FIX */ 
+#ifndef CONFIG_ATH9K_HTC
+#define CONFIG_ATH9K_HTC 1
+#endif /* CONFIG_ATH9K_HTC */ 
+#ifndef CONFIG_RT2500USB
+#define CONFIG_RT2500USB 1
+#endif /* CONFIG_RT2500USB */ 
+#if defined(CONFIG_CRC_CCITT) || defined(CONFIG_CRC_CCITT_MODULE)
+#ifndef CONFIG_RT2800USB
+#define CONFIG_RT2800USB 1
+#endif /* CONFIG_RT2800USB */ 
+#ifndef CONFIG_RT2800USB_RT33XX
+#define CONFIG_RT2800USB_RT33XX 1
+#endif /* CONFIG_RT2800USB_RT33XX */ 
+#ifndef CONFIG_RT2800USB_RT35XX
+#define CONFIG_RT2800USB_RT35XX 1
+#endif /* CONFIG_RT2800USB_RT35XX */ 
+#ifndef CONFIG_RT2800USB_UNKNOWN
+#define CONFIG_RT2800USB_UNKNOWN 1
+#endif /* CONFIG_RT2800USB_UNKNOWN */ 
+#endif /* CONFIG_CRC_CCITT */
+#ifndef CONFIG_RT2X00_LIB_USB
+#define CONFIG_RT2X00_LIB_USB 1
+#endif /* CONFIG_RT2X00_LIB_USB */ 
+#if defined(CONFIG_CRC_ITU_T) || defined(CONFIG_CRC_ITU_T_MODULE)
+#ifndef CONFIG_RT73USB
+#define CONFIG_RT73USB 1
+#endif /* CONFIG_RT73USB */ 
+#endif /* CONFIG_CRC_ITU_T */
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,27))
+#undef CONFIG_LIBERTAS_THINFIRM_USB
+#undef CONFIG_LIBERTAS_USB
+#else /* CONFIG_COMPAT_KERNEL_2_6_27 */
+#ifndef CONFIG_LIBERTAS_THINFIRM_USB
+#define CONFIG_LIBERTAS_THINFIRM_USB 1
+#endif /* CONFIG_LIBERTAS_THINFIRM_USB */ 
+#ifndef CONFIG_LIBERTAS_USB
+#define CONFIG_LIBERTAS_USB 1
+#endif /* CONFIG_LIBERTAS_USB */ 
+#endif /* CONFIG_COMPAT_KERNEL_2_6_27 */
+#ifndef CONFIG_ORINOCO_USB
+#define CONFIG_ORINOCO_USB 1
+#endif /* CONFIG_ORINOCO_USB */ 
+#ifndef CONFIG_BT_HCIBTUSB
+#define CONFIG_BT_HCIBTUSB 1
+#endif /* CONFIG_BT_HCIBTUSB */ 
+#ifndef CONFIG_BT_HCIBCM203X
+#define CONFIG_BT_HCIBCM203X 1
+#endif /* CONFIG_BT_HCIBCM203X */ 
+#ifndef CONFIG_BT_HCIBPA10X
+#define CONFIG_BT_HCIBPA10X 1
+#endif /* CONFIG_BT_HCIBPA10X */ 
+#ifndef CONFIG_BT_HCIBFUSB
+#define CONFIG_BT_HCIBFUSB 1
+#endif /* CONFIG_BT_HCIBFUSB */ 
+#ifndef CONFIG_BT_ATH3K
+#define CONFIG_BT_ATH3K 1
+#endif /* CONFIG_BT_ATH3K */ 
+#ifndef CONFIG_RTL8192CU
+#define CONFIG_RTL8192CU 1
+#endif /* CONFIG_RTL8192CU */ 
+#endif /* CONFIG_USB */
+#if defined(CONFIG_SPI_MASTER) || defined(CONFIG_SPI_MASTER_MODULE)
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,25))
+#if defined(CONFIG_CRC7) || defined(CONFIG_CRC7_MODULE)
+#ifndef CONFIG_WL1251_SPI
+#define CONFIG_WL1251_SPI 1
+#endif /* CONFIG_WL1251_SPI */ 
+#ifndef CONFIG_WL12XX_SPI
+#define CONFIG_WL12XX_SPI 1
+#endif /* CONFIG_WL12XX_SPI */ 
+#endif /* CONFIG_CRC7 */
+#ifndef CONFIG_P54_SPI
+#define CONFIG_P54_SPI 1
+#endif /* CONFIG_P54_SPI */ 
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,27))
+#undef CONFIG_LIBERTAS_SPI
+#else /* CONFIG_COMPAT_KERNEL_2_6_27 */
+#ifndef CONFIG_LIBERTAS_SPI
+#define CONFIG_LIBERTAS_SPI 1
+#endif /* CONFIG_LIBERTAS_SPI */ 
+#endif /* CONFIG_COMPAT_KERNEL_2_6_27 */
+#endif /* CONFIG_COMPAT_KERNEL_2_6_25 */
+#endif /* CONFIG_SPI_MASTER */
+#if defined(CONFIG_MMC) || defined(CONFIG_MMC_MODULE)
+#ifndef CONFIG_SSB_SDIOHOST
+#define CONFIG_SSB_SDIOHOST 1
+#endif /* CONFIG_SSB_SDIOHOST */ 
+#ifndef CONFIG_B43_SDIO
+#define CONFIG_B43_SDIO 1
+#endif /* CONFIG_B43_SDIO */ 
+#if defined(CONFIG_CRC7) || defined(CONFIG_CRC7_MODULE)
+#if defined(CONFIG_WL12XX_PLATFORM_DATA) || defined(CONFIG_WL12XX_PLATFORM_DATA_MODULE)
+#ifndef CONFIG_COMPAT_WL1251_SDIO
+#define CONFIG_COMPAT_WL1251_SDIO 1
+#endif /* CONFIG_COMPAT_WL1251_SDIO */ 
+#endif /* CONFIG_WL12XX_PLATFORM_DATA */
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,32))
+#if defined(CONFIG_WL12XX_PLATFORM_DATA) || defined(CONFIG_WL12XX_PLATFORM_DATA_MODULE)
+#ifndef CONFIG_COMPAT_WL12XX_SDIO
+#define CONFIG_COMPAT_WL12XX_SDIO 1
+#endif /* CONFIG_COMPAT_WL12XX_SDIO */ 
+#endif /* CONFIG_WL12XX_PLATFORM_DATA */
+#endif /* CONFIG_COMPAT_KERNEL_2_6_32 */
+#endif /* CONFIG_CRC7 */
+#ifndef CONFIG_MWIFIEX_SDIO
+#define CONFIG_MWIFIEX_SDIO 1
+#endif /* CONFIG_MWIFIEX_SDIO */ 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,32))
+#ifndef CONFIG_COMPAT_LIBERTAS_SDIO
+#define CONFIG_COMPAT_LIBERTAS_SDIO 1
+#endif /* CONFIG_COMPAT_LIBERTAS_SDIO */ 
+#endif /* CONFIG_COMPAT_KERNEL_2_6_32 */
+#ifndef CONFIG_IWM
+#define CONFIG_IWM 1
+#endif /* CONFIG_IWM */ 
+#ifndef CONFIG_BT_HCIBTSDIO
+#define CONFIG_BT_HCIBTSDIO 1
+#endif /* CONFIG_BT_HCIBTSDIO */ 
+#ifndef CONFIG_BT_MRVL_SDIO
+#define CONFIG_BT_MRVL_SDIO 1
+#endif /* CONFIG_BT_MRVL_SDIO */ 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,27))
+#ifndef CONFIG_ATH6KL
+#define CONFIG_ATH6KL 1
+#endif /* CONFIG_ATH6KL */ 
+#endif /* CONFIG_COMPAT_KERNEL_2_6_27 */
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,29))
+#ifndef CONFIG_BRCMFMAC
+#define CONFIG_BRCMFMAC 1
+#endif /* CONFIG_BRCMFMAC */ 
+#endif /* CONFIG_COMPAT_KERNEL_2_6_29 */
+#endif /* CONFIG_MMC */
+#ifndef CONFIG_RTLWIFI
+#define CONFIG_RTLWIFI 1
+#endif /* CONFIG_RTLWIFI */ 
+#ifndef CONFIG_RTL8192C_COMMON
+#define CONFIG_RTL8192C_COMMON 1
+#endif /* CONFIG_RTL8192C_COMMON */ 
+#ifndef CONFIG_RT2X00
+#define CONFIG_RT2X00 1
+#endif /* CONFIG_RT2X00 */ 
+#ifndef CONFIG_RT2X00_LIB
+#define CONFIG_RT2X00_LIB 1
+#endif /* CONFIG_RT2X00_LIB */ 
+#ifndef CONFIG_RT2800_LIB
+#define CONFIG_RT2800_LIB 1
+#endif /* CONFIG_RT2800_LIB */ 
+#ifndef CONFIG_RT2X00_LIB_FIRMWARE
+#define CONFIG_RT2X00_LIB_FIRMWARE 1
+#endif /* CONFIG_RT2X00_LIB_FIRMWARE */ 
+#ifndef CONFIG_RT2X00_LIB_CRYPTO
+#define CONFIG_RT2X00_LIB_CRYPTO 1
+#endif /* CONFIG_RT2X00_LIB_CRYPTO */ 
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,25))
+#undef CONFIG_RT2X00_LIB_LEDS
+#else /* CONFIG_COMPAT_KERNEL_2_6_25 */
+#if defined(CONFIG_LEDS_CLASS) || defined(CONFIG_LEDS_CLASS_MODULE)
+#ifndef CONFIG_RT2X00_LIB_LEDS
+#define CONFIG_RT2X00_LIB_LEDS 1
+#endif /* CONFIG_RT2X00_LIB_LEDS */ 
+#endif /* CONFIG_LEDS_CLASS */
+#endif /* CONFIG_COMPAT_KERNEL_2_6_25 */
+#ifndef CONFIG_P54_COMMON
+#define CONFIG_P54_COMMON 1
+#endif /* CONFIG_P54_COMMON */ 
+#if defined(CONFIG_MAC80211_LEDS) || defined(CONFIG_MAC80211_LEDS_MODULE)
+#ifndef CONFIG_P54_LEDS
+#define CONFIG_P54_LEDS 1
+#endif /* CONFIG_P54_LEDS */ 
+#endif /* CONFIG_MAC80211_LEDS */
+#ifndef CONFIG_ATH_COMMON
+#define CONFIG_ATH_COMMON 1
+#endif /* CONFIG_ATH_COMMON */ 
+#ifndef CONFIG_BRCMUTIL
+#define CONFIG_BRCMUTIL 1
+#endif /* CONFIG_BRCMUTIL */ 
+#if defined(CONFIG_CRC7) || defined(CONFIG_CRC7_MODULE)
+#ifndef CONFIG_WL1251
+#define CONFIG_WL1251 1
+#endif /* CONFIG_WL1251 */ 
+#ifndef CONFIG_WL12XX
+#define CONFIG_WL12XX 1
+#endif /* CONFIG_WL12XX */ 
+#endif /* CONFIG_CRC7 */
+#ifndef CONFIG_MWIFIEX
+#define CONFIG_MWIFIEX 1
+#endif /* CONFIG_MWIFIEX */ 
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,27))
+#undef CONFIG_LIBERTAS
+#else /* CONFIG_COMPAT_KERNEL_2_6_27 */
+#ifndef CONFIG_LIBERTAS_THINFIRM
+#define CONFIG_LIBERTAS_THINFIRM 1
+#endif /* CONFIG_LIBERTAS_THINFIRM */ 
+#ifndef CONFIG_LIBERTAS
+#define CONFIG_LIBERTAS 1
+#endif /* CONFIG_LIBERTAS */ 
+#ifndef CONFIG_LIBERTAS_MESH
+#define CONFIG_LIBERTAS_MESH 1
+#endif /* CONFIG_LIBERTAS_MESH */ 
+#endif /* CONFIG_COMPAT_KERNEL_2_6_27 */
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(2,6,31))
+#ifndef CONFIG_RFKILL_BACKPORT
+#define CONFIG_RFKILL_BACKPORT 1
+#endif /* CONFIG_RFKILL_BACKPORT */ 
+#if defined(CONFIG_LEDS_TRIGGERS) || defined(CONFIG_LEDS_TRIGGERS_MODULE)
+#ifndef CONFIG_RFKILL_BACKPORT_LEDS
+#define CONFIG_RFKILL_BACKPORT_LEDS 1
+#endif /* CONFIG_RFKILL_BACKPORT_LEDS */ 
+#endif /* CONFIG_LEDS_TRIGGERS */
+#ifndef CONFIG_RFKILL_BACKPORT_INPUT
+#define CONFIG_RFKILL_BACKPORT_INPUT 1
+#endif /* CONFIG_RFKILL_BACKPORT_INPUT */ 
+#endif /* CONFIG_COMPAT_KERNEL_2_6_31 */
+#ifdef CONFIG_NET_SCHED
+#ifdef CONFIG_NETDEVICES_MULTIQUEUE
+#ifndef CONFIG_MAC80211_QOS
+#define CONFIG_MAC80211_QOS 1
+#endif /* CONFIG_MAC80211_QOS */ 
+#endif
+#endif
 #endif /* COMPAT_AUTOCONF_INCLUDED */
diff -ruN admin-upd-res/include/net/bluetooth/hci.h include/net/bluetooth/hci.h
--- admin-upd-res/include/net/bluetooth/hci.h	2012-02-08 10:02:22.993697000 +0200
+++ include/net/bluetooth/hci.h	2012-02-08 10:02:23.072685000 +0200
@@ -162,6 +162,8 @@
 
 #define SCO_ESCO_MASK  (ESCO_HV1 | ESCO_HV2 | ESCO_HV3)
 #define EDR_ESCO_MASK  (ESCO_2EV3 | ESCO_3EV3 | ESCO_2EV5 | ESCO_3EV5)
+#define ALL_ESCO_MASK	(SCO_ESCO_MASK | ESCO_EV3 | ESCO_EV4 | ESCO_EV5 | \
+			EDR_ESCO_MASK)
 
 /* ACL flags */
 #define ACL_START_NO_FLUSH	0x00
@@ -170,6 +172,7 @@
 #define ACL_ACTIVE_BCAST	0x04
 #define ACL_PICO_BCAST		0x08
 
+#define ACL_PB_MASK	(ACL_CONT | ACL_START)
 /* Baseband links */
 #define SCO_LINK	0x00
 #define ACL_LINK	0x01
@@ -275,6 +278,13 @@
 #define HCI_ERROR_LOCAL_HOST_TERM	0x16
 #define HCI_ERROR_PAIRING_NOT_ALLOWED	0x18
 
+/* Flow specification definitions */
+#define HCI_FS_SERVICETYPE_NO_TRAFFIC  0x00
+#define HCI_FS_SERVICETYPE_BEST_EFFORT 0x01
+#define HCI_FS_SERVICETYPE_GUARANTEED  0x02
+#define HCI_FS_DIR_OUTGOING 0x0
+#define HCI_FS_DIR_INCOMING 0x1
+
 /* -----  HCI Commands ---- */
 #define HCI_OP_NOP			0x0000
 
@@ -1368,6 +1378,9 @@
 	__u8     out;
 	__u16    state;
 	__u32    link_mode;
+	__u32    mtu;
+	__u32    cnt;
+	__u32    pkts;
 };
 
 struct hci_dev_req {
diff -ruN admin-upd-res/include/net/bluetooth/hci_core.h include/net/bluetooth/hci_core.h
--- admin-upd-res/include/net/bluetooth/hci_core.h	2012-02-08 10:02:22.987719000 +0200
+++ include/net/bluetooth/hci_core.h	2012-02-08 10:02:23.075692000 +0200
@@ -522,7 +522,8 @@
 void hci_setup_sync(struct hci_conn *conn, __u16 handle);
 void hci_sco_setup(struct hci_conn *conn, __u8 status);
 
-struct hci_conn *hci_conn_add(struct hci_dev *hdev, int type, bdaddr_t *dst);
+struct hci_conn *hci_conn_add(struct hci_dev *hdev, int type,
+					__u16 pkt_type, bdaddr_t *dst);
 int hci_conn_del(struct hci_conn *conn);
 void hci_conn_hash_flush(struct hci_dev *hdev);
 void hci_conn_check_pending(struct hci_dev *hdev);
@@ -531,8 +532,9 @@
 int hci_chan_del(struct hci_chan *chan);
 void hci_chan_hash_flush(struct hci_conn *conn);
 /* BlueTi Start */
-struct hci_conn *hci_connect(struct hci_dev *hdev, int type, bdaddr_t *dst, __u8 addr_type,
-						__u8 sec_level, __u8 auth_type);
+struct hci_conn *hci_connect(struct hci_dev *hdev, int type, __u16 pkt_type, 
+                        bdaddr_t *dst, __u8 addr_type, __u8 sec_level, 
+                        __u8 auth_type);
 /* BlueTi End */
 int hci_conn_check_link_mode(struct hci_conn *conn);
 int hci_conn_check_secure(struct hci_conn *conn, __u8 sec_level);
@@ -561,7 +563,7 @@
 			if (conn->state == BT_CONNECTED) {
 				timeo = msecs_to_jiffies(conn->disc_timeout);
 				if (!conn->out)
-					timeo *= 2;
+					timeo *= 20;
 			} else {
 				timeo = msecs_to_jiffies(10);
 			}
diff -ruN admin-upd-res/include/net/bluetooth/l2cap.h include/net/bluetooth/l2cap.h
--- admin-upd-res/include/net/bluetooth/l2cap.h	2012-02-08 10:02:22.989693000 +0200
+++ include/net/bluetooth/l2cap.h	2012-02-08 10:02:23.077741000 +0200
@@ -84,6 +84,7 @@
 #define L2CAP_LM_TRUSTED	0x0008
 #define L2CAP_LM_RELIABLE	0x0010
 #define L2CAP_LM_SECURE		0x0020
+#define L2CAP_LM_FLUSHABLE	0x0040
 
 /* L2CAP command codes */
 #define L2CAP_COMMAND_REJ	0x01
diff -ruN admin-upd-res/include/net/bluetooth/rfcomm.h include/net/bluetooth/rfcomm.h
--- admin-upd-res/include/net/bluetooth/rfcomm.h	2012-02-08 10:02:22.992686000 +0200
+++ include/net/bluetooth/rfcomm.h	2012-02-08 10:02:23.081716000 +0200
@@ -29,7 +29,6 @@
 #define RFCOMM_CONN_TIMEOUT (HZ * 30)
 #define RFCOMM_DISC_TIMEOUT (HZ * 20)
 #define RFCOMM_AUTH_TIMEOUT (HZ * 25)
-#define RFCOMM_IDLE_TIMEOUT (HZ * 2)
 
 #define RFCOMM_DEFAULT_MTU	127
 #define RFCOMM_DEFAULT_CREDITS	7
@@ -155,7 +154,6 @@
 struct rfcomm_session {
 	struct list_head list;
 	struct socket   *sock;
-	struct timer_list timer;
 	unsigned long    state;
 	unsigned long    flags;
 	atomic_t         refcnt;
diff -ruN admin-upd-res/drivers/bcma/Makefile drivers/bcma/Makefile
--- admin-upd-res/drivers/bcma/Makefile	2012-02-08 10:02:20.287978000 +0200
+++ drivers/bcma/Makefile	2012-02-08 10:06:09.924845000 +0200
@@ -1,10 +1 @@
-bcma-y					+= main.o scan.o core.o sprom.o
-bcma-y					+= driver_chipcommon.o driver_chipcommon_pmu.o
-bcma-y					+= driver_pci.o
-bcma-$(CONFIG_BCMA_DRIVER_PCI_HOSTMODE)	+= driver_pci_host.o
-bcma-$(CONFIG_BCMA_DRIVER_MIPS)		+= driver_mips.o
-bcma-$(CONFIG_BCMA_HOST_PCI)		+= host_pci.o
-bcma-$(CONFIG_BCMA_HOST_SOC)		+= host_soc.o
-obj-$(CONFIG_BCMA)			+= bcma.o
 
-ccflags-$(CONFIG_BCMA_DEBUG)		:= -DDEBUG
diff -ruN admin-upd-res/drivers/bcma/Makefile.bk drivers/bcma/Makefile.bk
--- admin-upd-res/drivers/bcma/Makefile.bk	1970-01-01 02:00:00.000000000 +0200
+++ drivers/bcma/Makefile.bk	2012-02-08 10:02:23.088688000 +0200
@@ -0,0 +1,10 @@
+bcma-y					+= main.o scan.o core.o sprom.o
+bcma-y					+= driver_chipcommon.o driver_chipcommon_pmu.o
+bcma-y					+= driver_pci.o
+bcma-$(CONFIG_BCMA_DRIVER_PCI_HOSTMODE)	+= driver_pci_host.o
+bcma-$(CONFIG_BCMA_DRIVER_MIPS)		+= driver_mips.o
+bcma-$(CONFIG_BCMA_HOST_PCI)		+= host_pci.o
+bcma-$(CONFIG_BCMA_HOST_SOC)		+= host_soc.o
+obj-$(CONFIG_BCMA)			+= bcma.o
+
+ccflags-$(CONFIG_BCMA_DEBUG)		:= -DDEBUG
diff -ruN admin-upd-res/drivers/misc/eeprom/Makefile drivers/misc/eeprom/Makefile
--- admin-upd-res/drivers/misc/eeprom/Makefile	2012-02-08 10:02:22.764696000 +0200
+++ drivers/misc/eeprom/Makefile	2012-02-08 10:06:09.933853000 +0200
@@ -1,3 +1 @@
-obj-$(CONFIG_EEPROM_93CX6)	+= eeprom_93cx6.o
-obj-$(CONFIG_EEPROM_93XX46)	+= eeprom_93xx46.o
-obj-$(CONFIG_EEPROM_DIGSY_MTC_CFG) += digsy_mtc_eeprom.o
+
diff -ruN admin-upd-res/drivers/misc/eeprom/Makefile.bk drivers/misc/eeprom/Makefile.bk
--- admin-upd-res/drivers/misc/eeprom/Makefile.bk	1970-01-01 02:00:00.000000000 +0200
+++ drivers/misc/eeprom/Makefile.bk	2012-02-08 10:02:23.091687000 +0200
@@ -0,0 +1 @@
+obj-$(CONFIG_EEPROM_93CX6)	+= eeprom_93cx6.o
diff -ruN admin-upd-res/drivers/net/Makefile.bk drivers/net/Makefile.bk
--- admin-upd-res/drivers/net/Makefile.bk	1970-01-01 02:00:00.000000000 +0200
+++ drivers/net/Makefile.bk	2012-02-08 10:02:23.093692000 +0200
@@ -0,0 +1,6 @@
+
+obj-$(CONFIG_B44) += b44.o
+obj-$(CONFIG_ATL1) += atlx/
+obj-$(CONFIG_ATL2) += atlx/
+obj-$(CONFIG_ATL1E) += atl1e/
+obj-$(CONFIG_ATL1C) += atl1c/
diff -ruN admin-upd-res/drivers/net/wireless/Makefile drivers/net/wireless/Makefile
--- admin-upd-res/drivers/net/wireless/Makefile	2012-02-08 10:02:22.546717000 +0200
+++ drivers/net/wireless/Makefile	2012-02-08 10:06:09.916846000 +0200
@@ -1,48 +0,0 @@
-#
-# Makefile for the Linux Wireless network device drivers.
-#
-
-obj-$(CONFIG_IPW2100) += ipw2x00/
-obj-$(CONFIG_IPW2200) += ipw2x00/
-
-obj-$(CONFIG_HERMES)		+= orinoco/
-
-obj-$(CONFIG_AT76C50X_USB)      += at76c50x-usb.o
-
-obj-$(CONFIG_B43)		+= b43/
-obj-$(CONFIG_B43LEGACY)		+= b43legacy/
-obj-$(CONFIG_COMPAT_ZD1211RW)		+= zd1211rw/
-obj-$(CONFIG_RTL8180)		+= rtl818x/
-obj-$(CONFIG_RTL8187)		+= rtl818x/
-obj-$(CONFIG_RTLWIFI)		+= rtlwifi/
-
-obj-$(CONFIG_USB_NET_COMPAT_RNDIS_WLAN)	+= rndis_wlan.o
-
-obj-$(CONFIG_LIBERTAS)		+= libertas/
-
-obj-$(CONFIG_LIBERTAS_THINFIRM)	+= libertas_tf/
-
-obj-$(CONFIG_ADM8211)	+= adm8211.o
-
-obj-$(CONFIG_MWL8K)	+= mwl8k.o
-
-obj-$(CONFIG_IWLWIFI)	+= iwlwifi/
-obj-$(CONFIG_IWLWIFI_LEGACY)	+= iwlegacy/
-obj-$(CONFIG_RT2X00)	+= rt2x00/
-
-obj-$(CONFIG_P54_COMMON)	+= p54/
-
-obj-$(CONFIG_ATH_COMMON)	+= ath/
-
-obj-$(CONFIG_MAC80211_HWSIM)	+= mac80211_hwsim.o
-
-obj-$(CONFIG_WL1251)	+= wl1251/
-obj-$(CONFIG_WL12XX)	+= wl12xx/
-obj-$(CONFIG_WL12XX_PLATFORM_DATA)	+= wl12xx/
-
-obj-$(CONFIG_IWM)	+= iwmc3200wifi/
-
-obj-$(CONFIG_MWIFIEX)	+= mwifiex/
-
-obj-$(CONFIG_BRCMFMAC)	+= brcm80211/
-obj-$(CONFIG_BRCMSMAC)	+= brcm80211/
diff -ruN admin-upd-res/drivers/net/wireless/Makefile.bk drivers/net/wireless/Makefile.bk
--- admin-upd-res/drivers/net/wireless/Makefile.bk	1970-01-01 02:00:00.000000000 +0200
+++ drivers/net/wireless/Makefile.bk	2012-02-08 10:02:23.096708000 +0200
@@ -0,0 +1,43 @@
+#
+# Makefile for the Linux Wireless network device drivers.
+#
+
+obj-$(CONFIG_IPW2100) += ipw2x00/
+obj-$(CONFIG_IPW2200) += ipw2x00/
+
+obj-$(CONFIG_HERMES)		+= orinoco/
+
+obj-$(CONFIG_AT76C50X_USB)      += at76c50x-usb.o
+
+obj-$(CONFIG_B43)		+= b43/
+obj-$(CONFIG_B43LEGACY)		+= b43legacy/
+obj-$(CONFIG_COMPAT_ZD1211RW)		+= zd1211rw/
+obj-$(CONFIG_RTL8180)		+= rtl818x/
+obj-$(CONFIG_RTL8187)		+= rtl818x/
+obj-$(CONFIG_RTLWIFI)		+= rtlwifi/
+
+obj-$(CONFIG_USB_NET_COMPAT_RNDIS_WLAN)	+= rndis_wlan.o
+
+obj-$(CONFIG_LIBERTAS)		+= libertas/
+
+obj-$(CONFIG_LIBERTAS_THINFIRM)	+= libertas_tf/
+
+obj-$(CONFIG_ADM8211)	+= adm8211.o
+
+obj-$(CONFIG_MWL8K)	+= mwl8k.o
+
+obj-$(CONFIG_IWLAGN)	+= iwlwifi/
+obj-$(CONFIG_IWLWIFI_LEGACY)	+= iwlegacy/
+obj-$(CONFIG_RT2X00)	+= rt2x00/
+
+obj-$(CONFIG_P54_COMMON)	+= p54/
+
+obj-$(CONFIG_ATH_COMMON)	+= ath/
+
+obj-$(CONFIG_MAC80211_HWSIM)	+= mac80211_hwsim.o
+
+obj-$(CONFIG_WL1251)	+= wl1251/
+obj-$(CONFIG_WL12XX)	+= wl12xx/
+obj-$(CONFIG_WL12XX_PLATFORM_DATA)	+= wl12xx/
+
+obj-$(CONFIG_IWM)	+= iwmc3200wifi/
diff -ruN admin-upd-res/drivers/ssb/Makefile drivers/ssb/Makefile
--- admin-upd-res/drivers/ssb/Makefile	2012-02-08 10:02:20.262971000 +0200
+++ drivers/ssb/Makefile	2012-02-08 10:06:09.918846000 +0200
@@ -1,23 +1 @@
-# core
-ssb-y					+= main.o scan.o
-ssb-$(CONFIG_SSB_EMBEDDED)		+= embedded.o
-ssb-$(CONFIG_SSB_SPROM)			+= sprom.o
 
-# host support
-ssb-$(CONFIG_SSB_PCIHOST)		+= pci.o pcihost_wrapper.o
-ssb-$(CONFIG_SSB_PCMCIAHOST)		+= pcmcia.o
-ssb-$(CONFIG_SSB_SDIOHOST)		+= sdio.o
-
-# built-in drivers
-ssb-y					+= driver_chipcommon.o
-ssb-y					+= driver_chipcommon_pmu.o
-ssb-$(CONFIG_SSB_DRIVER_MIPS)		+= driver_mipscore.o
-ssb-$(CONFIG_SSB_DRIVER_EXTIF)		+= driver_extif.o
-ssb-$(CONFIG_SSB_DRIVER_PCICORE)	+= driver_pcicore.o
-ssb-$(CONFIG_SSB_DRIVER_GIGE)		+= driver_gige.o
-
-# b43 pci-ssb-bridge driver
-# Not strictly a part of SSB, but kept here for convenience
-ssb-$(CONFIG_SSB_B43_PCI_BRIDGE)	+= b43_pci_bridge.o
-
-obj-$(CONFIG_SSB)			+= ssb.o
diff -ruN admin-upd-res/drivers/ssb/Makefile.bk drivers/ssb/Makefile.bk
--- admin-upd-res/drivers/ssb/Makefile.bk	1970-01-01 02:00:00.000000000 +0200
+++ drivers/ssb/Makefile.bk	2012-02-08 10:02:23.099719000 +0200
@@ -0,0 +1,23 @@
+# core
+ssb-y					+= main.o scan.o
+ssb-$(CONFIG_SSB_EMBEDDED)		+= embedded.o
+ssb-$(CONFIG_SSB_SPROM)			+= sprom.o
+
+# host support
+ssb-$(CONFIG_SSB_PCIHOST)		+= pci.o pcihost_wrapper.o
+ssb-$(CONFIG_SSB_PCMCIAHOST)		+= pcmcia.o
+ssb-$(CONFIG_SSB_SDIOHOST)		+= sdio.o
+
+# built-in drivers
+ssb-y					+= driver_chipcommon.o
+ssb-y					+= driver_chipcommon_pmu.o
+ssb-$(CONFIG_SSB_DRIVER_MIPS)		+= driver_mipscore.o
+ssb-$(CONFIG_SSB_DRIVER_EXTIF)		+= driver_extif.o
+ssb-$(CONFIG_SSB_DRIVER_PCICORE)	+= driver_pcicore.o
+ssb-$(CONFIG_SSB_DRIVER_GIGE)		+= driver_gige.o
+
+# b43 pci-ssb-bridge driver
+# Not strictly a part of SSB, but kept here for convenience
+ssb-$(CONFIG_SSB_B43_PCI_BRIDGE)	+= b43_pci_bridge.o
+
+obj-$(CONFIG_SSB)			+= ssb.o
